stages:
  # - testing
  - quality

image: docker:latest

services:
  - docker:dind

before_script:
  - mkdir -p /go/src/gitlab.com/verygoodsoftwarenotvirus/
  - cp -rf /builds/verygoodsoftwarenotvirus/todo
    /go/src/gitlab.com/verygoodsoftwarenotvirus/
  - cd /go/src/gitlab.com/verygoodsoftwarenotvirus/todo
  - apk add --update --no-cache make git gcc musl-dev

# unit-tests:
#   stage: testing
#   image: golang:alpine
#   variables:
#     GOPATH: '/go'
#   script:
#     - make coverage.out

# integration-tests:
#   stage: testing
#   variables:
#     GOPATH: '/go'
#   script:
#     - apk add --update --no-cache py-pip openssl python-dev libffi-dev
#       openssl-dev gcc libc-dev make
#     - pip install docker-compose
#     - make integration-tests

build-frontend:
  stage: quality
  image: node:10
  before_script:
    - npm install
  script:
    - cd frontend
    - npm run build

# linting:
#   stage: quality
#   image: golang:stretch
#   variables:
#     GOPATH: '/go'
#   before_script:
#     - apt-get install -y curl
#     - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.16.0
#   script:
#     - make lint

stages:
  - quality
  - testing

image: docker:latest

services:
  - docker:dind

before_script:
  - mkdir -p /go/src/gitlab.com/verygoodsoftwarenotvirus/
  - cp -rf /builds/verygoodsoftwarenotvirus/todo
    /go/src/gitlab.com/verygoodsoftwarenotvirus/
  - cd /go/src/gitlab.com/verygoodsoftwarenotvirus/todo
  - apt-get update -y && apt-get install -y make git gcc musl-dev

unit-tests:
  stage: testing
  image: golang:stretch
  variables:
    GOPATH: '/go'
  script:
    - make coverage.out

integration-tests:
  stage: testing
  image: golang:stretch
  variables:
    GOPATH: '/go'
  script:
    - apt-get update -y && apt-get install -y python3-pip openssl python-dev libffi-dev
      gcc libc-dev make
    - pip3 install docker-compose
    - make integration-tests

load-tests:
  stage: testing
  variables:
    GOPATH: '/go'
    LOADTEST_RUN_TIME: '2m30s'
  script:
    - apk add --update --no-cache py-pip openssl python-dev libffi-dev
      openssl-dev gcc libc-dev make
    - pip install docker-compose
    - make ci-load-tests

build-frontend:
  stage: quality
  image: node:10
  before_script:
    - cd frontend
    - npm install
  script:
    - npm run build

linting:
  stage: quality
  image: golang:stretch
  variables:
    GOPATH: '/go'
  before_script:
    - apt-get install -y curl
    - curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.16.0
  script:
    - make lint

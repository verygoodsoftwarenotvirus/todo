version: '3.3'

services:
  todo-server:
    build:
      context: ../
      dockerfile: dockerfiles/integration-server.Dockerfile
    ports:
      - '80:80'
    environment:
      DOCKER: 'true'
      JAEGER_SERVICE_NAME: 'todo-server'
      JAEGER_AGENT_HOST: 'tracing-server'
      JAEGER_AGENT_PORT: '6831'
      JAEGER_SAMPLER_MANAGER_HOST_PORT: 'tracing-server:5778'
    links:
      - tracing-server
      - database
    depends_on:
      - prometheus
      - grafana
    # logging:
    #   driver: none

  vegeta:
    build:
      context: ../
      dockerfile: dockerfiles/vegeta-load-tests.Dockerfile
    environment:
      OAUTHLIB_INSECURE_TRANSPORT: 'true'
    links:
      - todo-server

  database:
    image: postgres:latest
    ports:
      - '2345:5432'
    environment:
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: hunter2
      POSTGRES_DB: todo
    volumes:
      - ../database/_postgres_init_.sql:/docker-entrypoint-initdb.d/10-init.sql
    logging:
      driver: none

  tracing-server:
    image: jaegertracing/all-in-one:latest
    ports:
      - '5775:5775/udp'
      - '6831:6831/udp'
      - '6832:6832/udp'
      - '5778:5778'
      - '16686:16686'
      - '14268:14268'
      - '9411:9411'
    logging:
      driver: none

  prometheus:
    image: quay.io/prometheus/prometheus:v2.9.2
    volumes:
      - type: bind
        source: ../deploy/prometheus/local/config.yaml
        target: /etc/prometheus/config.yaml
    command:
      '--config.file=/etc/prometheus/config.yaml --storage.tsdb.path=/prometheus'
    ports:
      - '9090:9090'
    logging:
      driver: none

  grafana:
    image: grafana/grafana
    ports:
      - '3000:3000'
    volumes:
      - type: bind
        source: ../deploy/grafana/local/provisioning
        target: /etc/grafana/provisioning
      - type: bind
        source: ../deploy/grafana/dashboards
        target: /etc/grafana/dashboards
    links:
      - prometheus
    environment:
      GF_INSTALL_PLUGINS: 'grafana-piechart-panel'
    logging:
      driver: none

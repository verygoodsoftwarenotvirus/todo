version: "3.3"
services:
    nsqlookupd:
        image: nsqio/nsq:v1.2.1
        hostname: nsqlookupd
        ports:
            - "4160:4160"
            - "4161:4161"
        command: /nsqlookupd
        logging:
            driver: none
    events:
        image: nsqio/nsq:v1.2.1
        hostname: nsqd
        links:
            - nsqlookupd
        ports:
            - "4150:4150"
            - "4151:4151"
        command: /nsqd -broadcast-address=nsqd --lookupd-tcp-address=nsqlookupd:4160
        logging:
            driver: none
#    nsqadmin:
#        image: nsqio/nsq:v1.2.1
#        hostname: nsqadmin
#        links:
#            - events
#        ports:
#            - "4171:4171"
#        command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
#        logging:
#            driver: none
    database:
        container_name: database
        image: postgres:latest
        environment:
            POSTGRES_DB: 'todo'
            POSTGRES_PASSWORD: 'hunter2'
            POSTGRES_USER: 'dbuser'
        logging:
            driver: none
        ports:
            - "2345:5432"
    workers:
        container_name: workers
        depends_on:
            - todo-server
        links:
            - database
            - nsqlookupd
        volumes:
            - source: '../../environments/local/service.config'
              target: '/etc/service.config'
              type: 'bind'
            - source: '../../'
              target: '/go/src/gitlab.com/verygoodsoftwarenotvirus/todo'
              type: 'bind'
        build:
            context: '../../'
            dockerfile: 'environments/local/workers.Dockerfile'
    todo-server:
        container_name: server
        environment:
            TODO_SERVICE_LOCAL_SECRET_STORE_KEY: 'SUFNQVdBUkVUSEFUVEhJU1NFQ1JFVElTVU5TRUNVUkU='
            CONFIGURATION_FILEPATH: '/etc/service.config'
            JAEGER_DISABLED: 'false'
        ports:
            - "8888:8888"
        depends_on:
            - nsqlookupd
        links:
            - database
            - events
        #            - tracing-server
        #            - prometheus
        volumes:
            - source: '../../environments/local/service.config'
              target: '/etc/service.config'
              type: 'bind'
            - source: '../../'
              target: '/go/src/gitlab.com/verygoodsoftwarenotvirus/todo'
              type: 'bind'
        build:
            context: '../../'
            dockerfile: 'environments/local/Dockerfile'
#    tracing-server:
#        image: jaegertracing/all-in-one:1.22.0
#        logging:
#            driver: none
#        ports:
#            - "5775:5775/udp"
#            - "6831:6831/udp"
#            - "6832:6832/udp"
#            - "5778:5778"
#            - "16686:16686"
#            - "14268:14268"
#            - "9411:9411"
#    prometheus:
#        image: quay.io/prometheus/prometheus:v2.25.0
#        command: '--config.file=/etc/prometheus/config.yaml --storage.tsdb.path=/prometheus --log.level=debug'
#        logging:
#          driver: none
#        ports:
#            - 9090:9090
#        volumes:
#            - source: "../../environments/local/prometheus/config.yaml"
#              target: "/etc/prometheus/config.yaml"
#              type: 'bind'
#    grafana:
#      image: grafana/grafana:7.4.3
#      logging:
#        driver: none
#      ports:
#        - 3000:3000
#      links:
#        - prometheus
#      volumes:
#        - source: '../../environments/local/grafana/grafana.ini'
#          target: '/etc/grafana/grafana.ini'
#          type: 'bind'
#        - source: '../../environments/local/grafana/datasources.yaml'
#          target: '/etc/grafana/provisioning/datasources/datasources.yml'
#          type: 'bind'
#        - source: '../../environments/local/grafana/dashboards.yaml'
#          target: '/etc/grafana/provisioning/dashboards/dashboards.yml'
#          type: 'bind'
#        - source: '../../environments/local/grafana/dashboards'
#          target: '/etc/grafana/provisioning/dashboards/dashboards'
#          type: 'bind'

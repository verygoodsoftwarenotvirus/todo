version: "3.8"
services:
    redis:
        hostname: worker_queue
        image: redis:6-buster
        container_name: redis
        ports:
            - '6379:6379'
        logging:
          driver: none
    postgres:
        container_name: postgres
        hostname: pgdatabase
        image: postgres:13
        environment:
            POSTGRES_DB: 'todo'
            POSTGRES_PASSWORD: 'hunter2'
            POSTGRES_USER: 'dbuser'
        logging:
            driver: none
        ports:
            - '5432:5432'
    mysql:
        container_name: mysql
        hostname: mysqldatabase
        image: "mysql:8"
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
            MYSQL_DATABASE: 'todo'
            MYSQL_PASSWORD: 'hunter2'
            MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
            MYSQL_USER: 'dbuser'
        logging:
            driver: none
        ports:
            - '3306:3306'
    elasticsearch:
        image: elasticsearch:7.14.1
        ports:
            - '9200:9200'
            - '9300:9300'
        environment:
            discovery.type: 'single-node'
        healthcheck:
            test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
            interval: 30s
            timeout: 30s
            retries: 3
        logging:
            driver: none
    tracing-server:
        image: jaegertracing/all-in-one:1.22.0
        logging:
            driver: none
        ports:
            - "5775:5775/udp"
            - "6831:6831/udp"
            - "6832:6832/udp"
            - "5778:5778"
            - "16686:16686"
            - "14268:14268"
            - "9411:9411"
    prometheus:
        image: quay.io/prometheus/prometheus:v2.25.0
        logging:
            driver: none
        ports:
            - '9090:9090'
        volumes:
            - source: "../../../../environments/testing/prometheus/config.yaml"
              target: "/etc/prometheus/config.yaml"
              type: 'bind'
        command: '--config.file=/etc/prometheus/config.yaml --storage.tsdb.path=/prometheus'
    grafana:
        image: grafana/grafana
        logging:
            driver: none
        ports:
            - '3000:3000'
        links:
            - prometheus
        volumes:
            - source: '../../../../environments/testing/grafana/grafana.ini'
              target: '/etc/grafana/grafana.ini'
              type: 'bind'
            - source: '../../../../environments/testing/grafana/datasources.yaml'
              target: '/etc/grafana/provisioning/datasources/datasources.yml'
              type: 'bind'
            - source: '../../../../environments/testing/grafana/dashboards.yaml'
              target: '/etc/grafana/provisioning/dashboards/dashboards.yml'
              type: 'bind'
            - source: '../../../../environments/testing/grafana/dashboards'
              target: '/etc/grafana/provisioning/dashboards/dashboards'
              type: 'bind'
